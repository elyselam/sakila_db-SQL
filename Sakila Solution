USE sakila;
show database limit 1000;
SHOW tables;
desc country;

-- 1a. Display the first and last names of all actors from the table actor.
SELECT first_name, last_name FROM actor;

-- 1b.  Display the first and last name of each actor in a single column in upper case letters. Name the column Actor Name.
SELECT UPPER(CONCAT(first_name, ' ',  last_name)) AS "Actor Name" FROM actor;

-- 2a. Find the ID number, first name, and last name of an actor, of whom you know only the first name, "Joe."
SELECT actor_id, first_name, last_name FROM actor WHERE first_name = "Joe";

-- 2b.Find all actors whose last name contain the letters GEN:
SELECT actor_id, first_name, last_name FROM actor WHERE last_name LIKE  "%GEN%";

-- 2c. Find all actors whose last names contain the letters LI. Order the rows by last name and first name, in that order:

SELECT first_name, last_name FROM actor WHERE last_name LIKE  "%LI%" 
ORDER BY last_name ASC, first_name ASC;


-- 2d. Using IN, display the country_id and country columns of the following countries: Afghanistan, Bangladesh, and China:
SELECT country_id, country FROM country WHERE country IN ("Afghanistan", "Bangladesh", "China");

-- 3a. Add a middle_name column to the table actor. Position it between first_name and last_name. 
show actor;
SELECT * FROM actor;

ALTER TABLE actor 
ADD middle_ame VARCHAR(50) 

ALTER TABLE actor MODIFY middle_name  VARCHAR(50) AFTER first_name;

show actor;
 
-- 3b. You realize that some of these actors have tremendously long last names. Change the data type of the middle_name column to blobs.

ALTER TABLE actor
MODIFY COLUMN middle_name BLOB;


show actor;
-- 3c. Now delete the middle_name column
ALTER TABLE actor DROP middle_name;


-- 4a. List the last names of actors, as well as how many actors have that last name.

SELECT last_name, count(last_name) as multiples
FROM actor
GROUP BY last_name;

-- 4b. List last names of actors and the number of actors who have that last name, but only for names that are shared by at least two actors
SELECT last_name, COUNT(last_name) AS last_name_count
FROM actor
GROUP BY last_name 
HAVING last_name_count > 1;

-- 4c. HARPO WILLIAMS was accidentally entered  as GROUCHO WILLIAMS, fix the record.

UPDATE actor
SET first_name = "HARPO" 
WHERE first_name = "GROUCHO";
show actor;


-- 4d. It turns out that GROUCHO was the correct name after all! In a single query, if the first name of the actor is currently HARPO, change it to GROUCHO.

UPDATE actor
SET first_name = IF(first_name="HARPO", "GROUCHO", "MUCHO GROUCHO")
WHERE actor_id = 172;


-- 5a. You cannot locate the schema of the address table. Which query would you use to re-create it?
SHOW CREATE TABLE address;

-- 6a. Use JOIN to display the first and last names, as well as the address, of each staff member. Use the tables staff and address:


SELECT s.first_name, s.last_name, a.address, c.city, co.country
FROM staff AS s
LEFT JOIN address AS a
ON s.address_id = a.address_id
LEFT JOIN city AS c
ON a.city_id = c.city_id
LEFT JOIN country as co
ON c.country_id = co.country_id;


-- 6b. Use JOIN to display the total amount rung up by each staff member in August of 2005. Use tables staff and payment. 

SELECT * from payment;


SELECT * from staff;

SELECT s.staff_id,  s.first_name, s.last_name, SUM(p.amount) as total_sales
FROM payment AS p
INNER JOIN staff AS s
ON p.staff_id = s.staff_id
WHERE payment_date BETWEEN  "20050801" AND "20050901"
GROUP BY s.staff_id;

--  6c. List each film and the number of actors who are listed for that film. Use tables film_actor and film. Use inner join.

SELECT * FROM film_actor;
SELECT * FROM film;


-- 6d. How many copies of the film Hunchback Impossible exist in the inventory system?


SELECT f.title, COUNT(f.title) AS num FROM film AS f
INNER JOIN inventory AS i 
ON f.film_id = i.film_id
WHERE f.title = "Hunchback Impossible"
GROUP BY f.title;

-- 6e. Using the tables payment and customer and the JOIN command, 
-- list the total paid by each customer. 
-- List the customers alphabetically by last name:


select * from payment;
select * from customer;

SELECT c.first_name, c.last_name, sum(p.amount) AS total_paid FROM payment AS p
INNER JOIN customer AS c
ON p.customer_id = c.customer_id
GROUP BY c.first_name, c.last_name
ORDER BY c.last_name, c.first_name;

-- 7a.films starting with the letters K and Q have soared in popularity. 
-- Use subqueries to display the titles of movies starting with the letters K and Q whose language is English.

select * from language;
SELECT title FROM film
WHERE title LIKE "Q%" OR title LIKE "K%"
	AND language_id = (
		SELECT language_id FROM language
        WHERE name = "English");

-- 7b. Use subqueries to display all actors who appear in the film Alone Trip.
select * from actor;

SELECT first_name, last_name FROM actor
WHERE actor_id IN (
	SELECT actor_id FROM film_actor 
    WHERE film_id = (
		SELECT film_id FROM film 
        WHERE title = "Alone Trip"));
